datasource db {
  provider = "postgresql"
  url = env("db_url")
}

generator client {
  provider = "prisma-client-js"
}

model user {
  @@map(name: "users")
  id              Int         @default(autoincrement()) @id
  name            String

  twitch_id       String      @unique
  profile_image   String

  hide_ratings    Boolean     @default(true)

  playthroughs    playthrough[]

  created_at      DateTime    @db.Timestamptz @default(now())
  updated_at      DateTime    @db.Timestamptz @updatedAt
}

model game {
  id        Int       @default(autoincrement()) @id
  name      String

  flags     flags[]

  created_at      DateTime    @db.Timestamptz @default(now())
  updated_at      DateTime    @db.Timestamptz @updatedAt
}

model flags {
  id        Int       @default(autoincrement()) @id
  name      String?
  value     String

  game      game      @relation(fields: [game_id], references: [id])
  game_id   Int

  seeds     seed[]

  created_at      DateTime    @db.Timestamptz @default(now())
  updated_at      DateTime    @db.Timestamptz @updatedAt
}

model seed {
  id        Int       @default(autoincrement()) @id
  seed      String
  hash      String

  flags     flags     @relation(fields: [flag_id], references: [id])
  flag_id  Int

  playthroughs    playthrough[]

  created_at      DateTime    @db.Timestamptz @default(now())
  updated_at      DateTime    @db.Timestamptz @updatedAt
}

model playthrough {
  id        Int       @default(autoincrement()) @id

  user      user      @relation(fields: [user_id], references: [id])
  user_id   Int

  seed      seed      @relation(fields: [seed_id], references: [id])
  seed_id   Int

  time_ms   Int

  comment         String?
  url             String?
  rating_fun      Float     @default(0)
  rating_hard     Float     @default(0)

  created_at      DateTime    @db.Timestamptz @default(now())
  updated_at      DateTime    @db.Timestamptz @updatedAt
}
